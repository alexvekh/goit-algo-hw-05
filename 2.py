"""
Реалізувати двійковий пошук для відсортованого масиву з дробовими числами. 
Написана функція для двійкового пошуку повинна повертати кортеж, де першим елементом є кількість ітерацій, 
потрібних для знаходження елемента. 
Другим елементом має бути "верхня межа" — це найменший елемент, який є більшим або рівним заданому значенню.
"""

def binary_next_search(arr, x):
    low = 0
    high = len(arr) - 1
    mid = 0
    count = 0
 
    while low <= high:
        count += 1
        mid = (high + low) // 2
 
        # якщо x більше за значення посередині списку, ігноруємо ліву половину
        if arr[mid] < x:
            low = mid + 1
 
        # якщо x менше за значення посередині списку, ігноруємо праву половину
        elif arr[mid] > x:
            high = mid - 1
 
        # інакше x присутній на позиції і повертаємо його
        else:
            return (count, mid)
 
    # якщо елемент не знайдений
    if x > arr[len(arr)-1]:
        return -1
    elif x < arr[mid]: 
        return (count, mid)
    else:
        return (count, mid+1)

arr = [1.25, 1.55, 1.75, 2.00, 2.10, 2.15, 2.75, 3.25, 3.5, 3.90, 4.60, 5.45, 8.15, 10.20, 12.50, 15.15, 18.25, 20.75, 22.50, 24.00]
x = 10

# arr2 = [1/3, 3/5, 5/7, 2/3, 4/5, 12/15, 1/2, 18/20, 21/25, 22/40, 24/40]
# arr2.sort()
# x2 = 0.81

print(binary_next_search(arr, x))